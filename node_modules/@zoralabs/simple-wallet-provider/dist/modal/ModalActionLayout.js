"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModalActionLayout = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const core_1 = require("@web3-react/core");
const react_1 = require("react");
const useThemeConfig_1 = require("../hooks/useThemeConfig");
const ModalOverlay_1 = require("./ModalOverlay");
const ModalContent_1 = require("./ModalContent");
const useWalletModalState_1 = require("../hooks/useWalletModalState");
const CloseButton_1 = require("../components/CloseButton");
const ModalActionLayout = ({ children, error, modalTitle, modalName, modalDescription, }) => {
    const { getString, getStyles } = useThemeConfig_1.useThemeConfig();
    const { openWallet, closeModal, modalWalletOpen } = useWalletModalState_1.useWalletModalState();
    const { account } = core_1.useWeb3React();
    const openConnectWallet = react_1.useCallback((evt) => {
        evt.preventDefault();
        openWallet();
    }, []);
    return (jsx_runtime_1.jsx(ModalOverlay_1.ModalOverlay, Object.assign({ modalName: modalName, canClose: true }, { children: account || modalWalletOpen ? (jsx_runtime_1.jsx(ModalContent_1.ModalContent, Object.assign({ title: modalTitle, ariaLabel: modalDescription }, { children: jsx_runtime_1.jsxs("div", Object.assign({}, getStyles("modalText"), { children: [jsx_runtime_1.jsxs("div", Object.assign({}, getStyles("modalHeader"), { children: [jsx_runtime_1.jsx("div", Object.assign({}, getStyles("modalTitleText"), { children: modalTitle }), void 0), jsx_runtime_1.jsx("button", Object.assign({}, getStyles("modalClose"), { onClick: closeModal }, { children: jsx_runtime_1.jsx(CloseButton_1.CloseButton, {}, void 0) }), void 0)] }), void 0), children, error && (jsx_runtime_1.jsxs("p", Object.assign({ className: "error" }, { children: [jsx_runtime_1.jsx("br", {}, void 0), error] }), void 0))] }), void 0) }), void 0)) : (jsx_runtime_1.jsx(ModalContent_1.ModalContent, Object.assign({ title: getString("CONNECT_WALLET"), ariaLabel: getString("CONNECT_WALLET") }, { children: jsx_runtime_1.jsxs("div", Object.assign({}, getStyles("modalText"), { children: [getString("PROMPT_PLEASE_CONNECT_PROMPT"), jsx_runtime_1.jsx("a", Object.assign({ href: "#", onClick: openConnectWallet }, { children: getString("PROMPT_CONNECT_ACTION") }), void 0), getString("PROMPT_AFTER_CONNECT_TO_CONTINUE")] }), void 0) }), void 0)) }), void 0));
};
exports.ModalActionLayout = ModalActionLayout;
